<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Snail Mu</title>
    <link>https://363549406.github.io/</link>
    <description>Recent content on Snail Mu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 11 Aug 2018 01:06:09 +0800</lastBuildDate>
    
	<atom:link href="https://363549406.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MySQL的my.cnf配置文件</title>
      <link>https://363549406.github.io/2018/08/mysql%E7%9A%84my.cnf%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sat, 11 Aug 2018 01:06:09 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/08/mysql%E7%9A%84my.cnf%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;p&gt;基础款my.cnf文件需要有哪些配置&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python项目虚拟环境pipenv</title>
      <link>https://363549406.github.io/2018/08/python%E9%A1%B9%E7%9B%AE%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83pipenv/</link>
      <pubDate>Fri, 10 Aug 2018 20:22:25 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/08/python%E9%A1%B9%E7%9B%AE%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83pipenv/</guid>
      <description>&lt;p&gt;Requests作者Kenneth Reitz的另一个作品。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL自带的4个数据库</title>
      <link>https://363549406.github.io/2018/08/mysql%E8%87%AA%E5%B8%A6%E7%9A%844%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Fri, 10 Aug 2018 18:10:09 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/08/mysql%E8%87%AA%E5%B8%A6%E7%9A%844%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>安装过MySQL后，MySQL中自带了4个数据库。
information_schema 关于数据的数据，你可以叫做元数据。下面看下information_schema数据库中包含的表都是些什么。
 CHARACTER_SETS：从名字看数据库支持的字符集 COLLATIONS：字符序。 COLUMNS：表中的列信息 ENGINES：存储引擎 SCHEMATE：提供所有数据库信息。show databases； *_PRIVILEGES：权限信息  还有很多表，基本上看名字可以看出来存储的信息。
之前我就不太明白COLLATION的概念。这里了解了一下。COLLATION是对比方法，用于指定数据集如何排序，以及字符串的比较规则。先看下字符集里面utf8mb4对应的default collation是utf8mb4_general_ci。这里面ci代表case ignore我猜的。总结下COLLATION的定义有两种格式。
 &amp;lt;character_set&amp;gt;_&amp;lt;language/other&amp;gt;_&amp;lt;ci/cs&amp;gt; &amp;lt;character_set&amp;gt;_&amp;lt;bin&amp;gt;  cs就是 case sensitive。bin是二进制。
在查看一下COLLATIONS表中character_set为utf8mb4的结果，可以看到同一个字符集可以有很多COLLATIONS来选择，不同COLLATION的排序、字符对比的准确性和性能都不同。
MySQL数据库服务器有SHOW指令方便我们查询information_schema表中的信息。如常用的 show databases、show tables、show processlist等。
DESCRIBE TABLE也是使用到这个数据库中信息。
顺便提一下之前在使用Django migrate的时候在information_schema中某个表找信息帮助我定位到错误的。现在还没有安装环境没有办法验证。
mysql 就像名字里自带的高贵一样，这个表里面不用来放核心数据都说不过去。不要乱改。但是看看还是可以的。之前配置的主从同步就涉及到mysql.slave_master_info表。
performance_schema show variables like &#39;performance_schema&#39;;查看了下我电脑上装的是开启的。
主要是服务器监控信。performance_schema数据库中的表都是使用preformance_schema引擎不占用磁盘存储。
其实我更没有使用过。先知道这么个东西吧。
sys 在MySQL 5.7中加入，包含了一系列的存储过程、自定义函数以及视图来帮助我们快速了解系统的元数据信息。
sys数据库下除了sys_config是表以为，其他都是视图。
我觉得这个可以认为是一个方便的工具集么。sys下面的视图分为几类
 host_summary: 服务器层面 user_summary: 用户层级 InnoDB: InnoDB层面 IO: I/O层的统计 memory schema session statement wait  扩展阅读：
 在Oracle专家眼中，MySQL sys schema是怎样的存在 </description>
    </item>
    
    <item>
      <title>技术之我见</title>
      <link>https://363549406.github.io/%E6%8A%80%E6%9C%AF%E4%B9%8B%E6%88%91%E8%A7%81/</link>
      <pubDate>Wed, 01 Aug 2018 15:53:09 +0800</pubDate>
      
      <guid>https://363549406.github.io/%E6%8A%80%E6%9C%AF%E4%B9%8B%E6%88%91%E8%A7%81/</guid>
      <description></description>
    </item>
    
    <item>
      <title>技术文章汇总</title>
      <link>https://363549406.github.io/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/</link>
      <pubDate>Mon, 30 Jul 2018 15:53:09 +0800</pubDate>
      
      <guid>https://363549406.github.io/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/</guid>
      <description> Redis  10个常见&amp;rdquo;刁钻&amp;rdquo;的Redis面试问题 使用Redis SETNX 命令实现分布式锁 - set if not exist设置锁，锁超时机制不是十分可靠 为什么说Redis是单线程的以及Redis为什么这么快！ Redis遍历所有key的两个命令 &amp;ndash; KEYS 和 SCAN 基于Redis实现延迟队列 - 使用SortedSet Redis持久化 - bgsave全量持久化和aof增量持久化 Redis性能提升-Pipeline和Batch操作 - 减少tcp请求响应次数 redis数据淘汰的集中模式 什么是redis、优点、缺点  MySQL  玩转processlist，高效追溯MySQL活跃连接数飙升根因 事务 （http://www.hollischuang.com/archives/898） 索引  http://blog.codinglabs.org/articles/theory-of-mysql-index.html MySQL索引背后的数据结构及算法原理 聚集索引,非聚集索引,B-Tree,B+Tree,最左前缀原理  乐观锁、悲观锁 我自己整理了一张mysql的思维导图 - 在整理的过程中补了很多知识点。  数据存储  浅谈分布式锁 - redis缓存锁、zookeeper redis和memcache的优缺点比较  跨域  为什么给你设置重重障碍？讲一讲Web开发中的跨域 - csrf跨域请求伪造，CORS跨域资源共享  Nginx  apache和nginx的区别。我觉得最重要的一个：apache没有办法处理C10K问题，选Nginx。  RabbitMQ Tornado  Python Web框架Tornado的异步处理代码示例 一个进程处理10K连接：分析Tornado源码  业务  秒杀系统优化方案之缓存、队列、锁设计思路 用户密码：md5+salt方式  架构  李艳鹏：技术人如何修炼内功  唯一id  uuid 分布式id  我们有两台mysql都可以写，自增id不会有问题么，机智的同事设置了auto-increment-offset|increment=2 可以部署redis来生成唯一id   python  线程安全的单例模式 协程 闭包 垃圾回收机制  操作系统  epoll、kqueue、select 调度算法 - redis的淘汰机制 死锁 IPC进程间通信  网络  http和https  RESTful架构 SOAP RPC 动态规划 </description>
    </item>
    
    <item>
      <title>Python中的编码</title>
      <link>https://363549406.github.io/2018/07/python%E4%B8%AD%E7%9A%84%E7%BC%96%E7%A0%81/</link>
      <pubDate>Wed, 18 Jul 2018 22:51:25 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/07/python%E4%B8%AD%E7%9A%84%E7%BC%96%E7%A0%81/</guid>
      <description>&lt;p&gt;本文将会介绍Python2和Python3中的字符编码。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python2和Python3并存</title>
      <link>https://363549406.github.io/2018/07/python2%E5%92%8Cpython3%E5%B9%B6%E5%AD%98/</link>
      <pubDate>Mon, 16 Jul 2018 22:43:25 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/07/python2%E5%92%8Cpython3%E5%B9%B6%E5%AD%98/</guid>
      <description>&lt;p&gt;PHP是世界上最好的语言 VS Python是世界上最好的两门语言。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HTTP基础</title>
      <link>https://363549406.github.io/2018/07/http%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Thu, 12 Jul 2018 18:12:25 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/07/http%E5%9F%BA%E7%A1%80/</guid>
      <description>&lt;p&gt;每天上网浏览网页的的背后到底是什么样子的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>计算机网络基础</title>
      <link>https://363549406.github.io/2018/07/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Mon, 09 Jul 2018 19:05:25 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/07/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</guid>
      <description>&lt;p&gt;计算机网络分类、设备、OSI模型。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据结构与算法之排序Sort</title>
      <link>https://363549406.github.io/2018/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E6%8E%92%E5%BA%8Fsort/</link>
      <pubDate>Sun, 08 Jul 2018 09:05:25 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E6%8E%92%E5%BA%8Fsort/</guid>
      <description>&lt;p&gt;算法第三讲排序(sort)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux网络状态</title>
      <link>https://363549406.github.io/2018/07/linux%E7%BD%91%E7%BB%9C%E7%8A%B6%E6%80%81/</link>
      <pubDate>Sat, 07 Jul 2018 15:23:25 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/07/linux%E7%BD%91%E7%BB%9C%E7%8A%B6%E6%80%81/</guid>
      <description>&lt;p&gt;这篇文章帮助你了解Linux服务器的网络相关命令
&lt;strong&gt;以后会回来把这些内容补全&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据结构与算法之哈希Hashing</title>
      <link>https://363549406.github.io/2018/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E5%93%88%E5%B8%8Chashing/</link>
      <pubDate>Fri, 06 Jul 2018 20:30:00 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E5%93%88%E5%B8%8Chashing/</guid>
      <description>&lt;p&gt;算法第三讲哈希（hashing)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据结构与算法之搜索Search</title>
      <link>https://363549406.github.io/2018/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E6%90%9C%E7%B4%A2search/</link>
      <pubDate>Fri, 06 Jul 2018 14:21:25 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E6%90%9C%E7%B4%A2search/</guid>
      <description>&lt;p&gt;算法第二讲搜索(search) [1]&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux文件系统</title>
      <link>https://363549406.github.io/2018/07/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Thu, 05 Jul 2018 23:23:25 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/07/linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;p&gt;这篇文章帮助你快速了解Linux文件系统&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据结构与算法之递归Recursion</title>
      <link>https://363549406.github.io/2018/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E9%80%92%E5%BD%92recursion/</link>
      <pubDate>Tue, 03 Jul 2018 00:51:25 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E9%80%92%E5%BD%92recursion/</guid>
      <description>&lt;p&gt;算法第一讲递归(recursion)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python的对象实例化</title>
      <link>https://363549406.github.io/2018/07/python%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%AE%9E%E4%BE%8B%E5%8C%96/</link>
      <pubDate>Mon, 02 Jul 2018 21:20:20 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/07/python%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%AE%9E%E4%BE%8B%E5%8C%96/</guid>
      <description>&lt;p&gt;我们经常创建对象，但是一个对象完整的实例化过程包含哪些步骤？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据结构与算法之链表Linked List</title>
      <link>https://363549406.github.io/2018/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E9%93%BE%E8%A1%A8linked-list/</link>
      <pubDate>Mon, 02 Jul 2018 15:18:00 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E9%93%BE%E8%A1%A8linked-list/</guid>
      <description>&lt;p&gt;线性数据结构（linear data structure）第四讲链表（linked list）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据结构与算法之双向队列Deque</title>
      <link>https://363549406.github.io/2018/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E5%8F%8C%E5%90%91%E9%98%9F%E5%88%97deque/</link>
      <pubDate>Mon, 02 Jul 2018 00:08:00 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E5%8F%8C%E5%90%91%E9%98%9F%E5%88%97deque/</guid>
      <description>&lt;p&gt;线性数据结构（linear data structure）第三讲双向队列（deque）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据结构与算法之队列Queue</title>
      <link>https://363549406.github.io/2018/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E9%98%9F%E5%88%97queue/</link>
      <pubDate>Sun, 01 Jul 2018 19:45:00 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/07/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E9%98%9F%E5%88%97queue/</guid>
      <description>&lt;p&gt;线性数据结构（linear data structure）第二讲队列（queue）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据结构与算法之栈Stack</title>
      <link>https://363549406.github.io/2018/06/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E6%A0%88stack/</link>
      <pubDate>Sat, 30 Jun 2018 15:05:25 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/06/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%8B%E6%A0%88stack/</guid>
      <description>&lt;p&gt;线性数据结构（linear data structure）第一讲栈（stack）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python GIL</title>
      <link>https://363549406.github.io/2018/06/python-gil/</link>
      <pubDate>Fri, 29 Jun 2018 15:05:25 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/06/python-gil/</guid>
      <description>&lt;p&gt;一个Python解释器同一时间只有一个线程在执行。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>常用链接</title>
      <link>https://363549406.github.io/%E5%B8%B8%E7%94%A8%E9%93%BE%E6%8E%A5/</link>
      <pubDate>Tue, 26 Jun 2018 13:57:00 +0800</pubDate>
      
      <guid>https://363549406.github.io/%E5%B8%B8%E7%94%A8%E9%93%BE%E6%8E%A5/</guid>
      <description>&lt;p&gt;感谢每一位在互联网上分享的人。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python中的元类</title>
      <link>https://363549406.github.io/2018/06/python%E4%B8%AD%E7%9A%84%E5%85%83%E7%B1%BB/</link>
      <pubDate>Mon, 25 Jun 2018 17:51:25 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/06/python%E4%B8%AD%E7%9A%84%E5%85%83%E7%B1%BB/</guid>
      <description>&lt;p&gt;也许写代码的时候没有写过元类，但是它的概念和原理还是要理解。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python高级开发技术栈</title>
      <link>https://363549406.github.io/2018/06/python%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E6%A0%88/</link>
      <pubDate>Mon, 25 Jun 2018 15:17:25 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/06/python%E9%AB%98%E7%BA%A7%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E6%A0%88/</guid>
      <description>&lt;p&gt;为自己准备的Python高级开发技术栈。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>为什么写博客</title>
      <link>https://363549406.github.io/2018/06/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%86%99%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sun, 24 Jun 2018 18:13:09 +0800</pubDate>
      
      <guid>https://363549406.github.io/2018/06/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%86%99%E5%8D%9A%E5%AE%A2/</guid>
      <description>&lt;p&gt;好的文章，不仅要能自己理解，还要给别人讲的简单，明白。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>